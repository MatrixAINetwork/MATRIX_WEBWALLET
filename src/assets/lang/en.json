{
  "header": {
    "myWallet": "My Wallet",
    "greenMining": "Green Mining",
    "crossChain": "Wormhole",
    "offlineTransfer": "Offline Transfer",
    "aiApplication": "AI Application",
    "contracts": "Contracts",
    "mapping": "Mapping",
    "createCoin": "Create Currency",
    "outHint": "Are you sure you want to close this wallet?",
    "hint": "Tips",
    "sure": "Yes, close",
    "confirm":"Confirm",
    "cancel": "Cancel",
    "refund": "Mining Account",
    "offlineSend": "Send Offline",
    "jointMining": "Joint Mining"
  },
  "myWallet": {
    "queryWallet": "Open Wallet Using",
    "file": "file",
    "privateKey": "Wallet private key",
    "mnemonic": "Mnemonic",
    "selectWalletFile": "Select wallet file",
    "openWallet": "Open Wallet",
    "msg1": "Don't have your own wallet yet?",
    "create": "Create a wallet",
    "msg2": "You can also enter an address to",
    "view": "View a wallet",
    "balance": "Balance",
    "enterPassword": "Please enter your password",
    "enterPrivate": "Please enter private key",
    "privateIncorrect": "The private key you entered is incorrect",
    "ledgerIncorrect": "Unable to get your wallet",
    "enterMnemonic": "Please enter Mnemonic",
    "mnemonicIncorrect": "The Mnemonic you entered is incorrect",
    "copySuccess": "Copied successfully",
    "copyFile": "Copied failed",
    "myAssets": "My Assets",
    "assets": "Assets",
    "NFTManage": "NFT Manage",
    "transactionRecord": "Transaction Record",
    "transfer": "Transfer",
    "availableAssets": "Available Assets",
    "revocableAssets": "Revocable Assets",
    "stakedAssets": "Financing Assets",
    "stakedAssets2": "Staked Assets",
    "walletAddress": "Wallet Address",
    "addressTip1": "This address is your",
    "addressTip2": "'s payment address",
    "accountName": "Account Name",
    "browserLink": "Browser Link",
    "addToken": "Add Token",
    "addNFToken": "Add NFT",
    "choose": "Choose a method to open your wallet",
    "mnemonicMan": "(MAN Wallet Only)"
  },
  "transfer": {
    "transferAmount": "Transfer amount",
    "enter": "Enter",
    "amount": "Amount",
    "allAsset": "Liquidate all asset",
    "Beneficiary": "Beneficiary",
    "enterRecipient": "Enter recipient wallet address",
    "addAddress": "Add another payment address",
    "deleteAddress": "Delete recipient",
    "estimatedGas": "Estimated gas fee",
    "estimate": "Estimate",
    "gasMethod": "Gas fee payment method",
    "selfPay": "Sender pays gas fee",
    "otherPay": "Recipient pays gas fee",
    "transferMethod": "Transfer method",
    "realTime": "Real time transfer",
    "scheduled": "Scheduled transfer",
    "message": "Ordinary Message",
    "advancedMessage": "Advanced Message",
    "ipfs": "IPFS",
    "confirm": "Confirm",
    "addressTip": "Please enter the correct wallet address or account name",
    "amountTip": "Transfer amount cannot be empty",
    "addressRepetition": "Duplicate reciplent",
    "selectTime": "Select date and time",
    "success": "success",
    "transferComplete": "Transfer complete",
    "confirmTransfer": "Confirm transaction information",
    "warningGas": "Plese input the transfer address and value"
  },
  "createWallet": {
    "createWallet": "Create a wallet",
    "createWalletTip1": "Matrix Wallet is a decentralized web-based wallet.",
    "createWalletTip2": "We will not store any information and passwords for you.",
    "createWalletTip3": "There is no way to recover them.",
    "createWalletTip4": "Once created, please carefully manage your keystore and private key.",
    "createWalletTip5": "If you can't find them, you will not be able to access your wallet.",
    "createWalletButton": "Create wallet with one click",
    "enterPassword": "Enter a password (at least 9 digits)",
    "passwordTip": "Please make your password at least 9 digits",
    "passWordError": "Incorrect Password. Please enter it again",
    "download": "Download Keystore ",
    "backup": "Your wallet has been created successfully! Please choose a backup method",
    "method1": "Method 1   Back up the Keystore file",
    "backupKeyStoreTip": "The keystore file is an encrypted private key. To open the keystore file, you also need to set a password.",
    "method2": "Method 2  Back up your private key",
    "backupPrivateKeyTip": "A private key is a randomly generated 256 character string",
    "method3": "Method 3  Back up your Mnemonic",
    "backupMnemonicTip": "Mnemonic is 12 English words",
    "save": "Save to drive",
    "copy": "copy",
    "saveMnemonic": "I 've recorded my Mnemonic",
    "savePrivateKey": "I 've recorded my private key",
    "next": "Next",
    "hint": "Your wallet has been created successfully Please choose one of the backup methods"
  },
  "contracts": {
    "contracts": "contracts",
    "contractsAddress": "Contracts Address",
    "contractsSuccess": "Contract Deployed Successfully"
  },
  "errorMsgs": {
    "jsonError": "Signature struct error",
    "keyStoreMsg": "Please correct wallet file",
    "passwordError": "The password you entered is incorrect",
    "invalidTokenName": "invalid token name",
    "exsitTokenName": "the token name already exists",
    "invalidContractAddress": "invalid contract address",
    "digitsError": "Error in decimal digits",
    "byteCodeError": "byteCode can't be blank",
    "timingError": "Error in the scheduled time",
    "valueError": "Error in the amount",
    "entrustTime1": "Please specify the entrusted time",
    "entrustTime2": "The entrust time shall be later than current time",
    "entrustTime3": "The start time should not be later than the end time",
    "entrustTime4": "You've already specified an entrust which overlaps this time range",
    "secondTime": "You've already specified an authorization which overlaps this time range",
    "invalidManAddress": "The Address is invalid",
    "entrustBlock": "The start block shall be smaller than the end block",
    "entrustSelf": "You can't entrust to yourself",
    "invalidCoinName": "Please input the correct currency name",
    "invalidETH": "Please input the ETH address",
    "invalidText": "Please input the valid text",
    "invalidHex": "Please input the valid hex",
    "uploadContent": "Please upload the contents",
    "cancelError1": "Please select wallet to revoke authorization",
    "cancelError2": "Please select wallet to revoke authorization",
    "currencyError": "You can't do the entrusts between different currencies",
    "entrustHeight": "You've already specified an entrust which overlaps this block range",
    "selectCancelist": "Please select the list",
    "coinName": "Please enter 2-8 uppercase letters",
    "coinName2": "The currency name cannot contain MAN",
    "validConfirm": "Please check the box to confirm the consumed MAN first",
    "validEmail": "Please input the correct Email Address",
    "jointTotalError":"The total stake amount of the founder shall not be less than 100000MAN",
    "currentError":"Incorrect amount entered"
  },
  "setUp": {
    "associate": "Wallet Association",
    "conversion": "Address Conversion",
    "privateBackups": "PrivateKey Backup",
    "keyStoreBackups": "KeyStore Backup",
    "accountSet": "AccountName Setting",
    "greetingsSet": "Greeting Setting",
    "logout": "Exit",
    "blackList": "Blacklist"
  },
  "associate": {
    "addAssociate": "Add joint wallet",
    "cancelAssociate": "joint wallets",
    "associateHint": "Once a joint wallet is enabled, the joint wallet can draw on the wallet’s “available assets”<br/>to cover gas fees. A wallet can add multiple joint wallets,<br/>although each user can only serve as a joint wallet to one account.",
    "associateAddress": "Joint wallet:",
    "transferType": "Association Type",
    "blockHeight": "block height",
    "time": "time",
    "times": "Number",
    "addCollection": "+ Add New",
    "associateSuccess": "Added successfully",
    "delAssociate": "Delete this associated wallet",
    "startTime": "Start date",
    "endTime": "End date"
  },
  "conversion": {
    "change": "Convert",
    "moreCoinAddress": "Currency Address",
    "addressChange": "Conversion Result",
    "moreCoinChange": "Currency Conversion",
    "manAddress": "MAN address",
    "ethaddress": "ETH address",
    "text": "TEXT",
    "hex": "HEX",
    "currencyName": "Currency Name",
    "pleaseEnter": " enter content"
  },
  "copyKeyStore": {
    "backupsKeyStore": "Backup KeyStore",
    "backupsSuccess": "Backup Success"
  },
  "CampaignNode": {
    "mortgage": "Stake",
    "query": "Query",
    "Mining_nodes": "Mining Node",
    "miners": "Miner",
    "mortgage_man": "Staked MAN",
    "dig_address": "Address",
    "mortgage_hint1": "*This is a signature account for mining without any rewards. The rewards will go to your current wallet",
    "mortgage_hint2": "*You can only have one signature account.",
    "mortgage-button": "Make Stakes",
    "Mining_type": "Staked Type",
    "Mining_mortgage": "Stake for Miner",
    "Validator_mortgage": "Stake for Validator",
    "select": "Please select",
    "campaignvalueError1": "You should stake at least 10000 MAN for a miner node",
    "campaignvalueError2": "Your balance is less than the required stake amount",
    "campaignvalueError3": "You should stake at least 100000 MAN for a validator node",
    "mortgageTypeError": "Please choose your stake type",
    "valueError": "Please enter your stake amount",
    "cancelDepositError": "No stake allowed before refund is finished",
    "regular": "Fixed stake",
    "current": "Flexible stake",
    "mortgage_number": "The amount of stake",
    "oneMonth": "One month",
    "threeMonth": "Three months",
    "sixMonth": "Six months",
    "oneYear": "Twelve months",
    "selectTimeLimit": "Please select the time limit",
    "timeLimit":"Time limit",
    "selectMortgageWay": "Please select the way of stake",
    "valueLessError1": "Fixed stake should be greater than 2000 MAN",
    "valueLessError2": "The first fixed stake of miner should be greater than 10000 MAN",
    "valueLessError3": "The first fixed stake of validator should be greater than 100000 MAN",
    "currentError": "Flexible stake should be greater than 100 MAN",
    "withdrawalsBigger": "Incorrect amount",
    "withdrawalsNeed": "The value should be greater 100 MAN",
    "onlyChange": "Change stake",
    "minnerTotalError": "The sum of new stake and previous stake needs to be more than 10000 MAN tokens to stake for miners",
    "valTotalError": "The sum of new stake and previous stake needs to be more than 100000 MAN tokens to stake for verifiers",
    "leastError": "At least",
    "man": "MAN"
  },
  "startNode": {
    "name": "Startup Node",
    "selfStart": "Do it myself",
    "otherStart": "Use Startup Service",
    "startType": "Startup Type",
    "yourEmail": "Your Email",
    "repeatEmail": "Re-submit your Email",
    "mortgage-button": "Make Stakes"
  },
  "SecondKey": {
    "SecondKeyHint": "During block creation, your can authorize other wallets to provide a signature in place of a mining wallet to protect the receiving wallet.",
    "authorizationAddress": "Authorized wallet address",
    "authorizationPermissions": "Authorization timeframe",
    "commit": "Submit",
    "addCollection": "+ Add authorized wallet address",
    "alreadyAuthorization": "Currently authorized keys",
    "startTime": "Start time",
    "endTime": "End time",
    "secondKeySuccess": "Authorized successfully"
  },
  "cancel": {
    "hint": "Successfully cancelled",
    "cancelAssociate1": "revoke authorization",
    "cancelAssociate": "Cancel Association"
  },
  "mapping": {
    "openWallet": "Open ETH Wallet",
    "mappingSuccess": "Successfully Transaction"
  },
  "createCoin": {
    "needMan": "Required MAN tokens",
    "address": "Receiving wallet address (new currency)",
    "value": "New currency quantity",
    "confirm": "Confirm",
    "tittle": "Create Currency",
    "currencyName": "Currency Name",
    "addButton": "+ Add address",
    "delCreate": "Delete address",
    "manCount": "MAN quantity",
    "destruction": "Burn address",
    "addressError": "Error with the address to receive new currency",
    "valueError": "The transfer amount must be over 0",
    "nameError": "The address must match the created currency",
    "success":"Transaction sent successfully"
  },
  "cancelEntrust": {
    "index": "Number",
    "authorization": "authorized wallet",
    "setUp": "setup details",
    "useRecord": "use history",
    "query": "view",
    "authorizationSetUp": "Admin settings"
  },
  "successHint": {
    "withdrawal": "Withdrawal successful",
    "refund": "Refund successful"
  },
  "lang": {
    "cn": "中文简体",
    "en": "English"
  },
  "HistoricalIncome": {
    "total_revenue": "Rewards history",
    "mining_hint": "Total mining rewards include mining rewards and staking rewards",
    "remove_mortgage": "Unstake",
    "remove_tittle": "Once stake is removed successfully, the available balance in the staking \n account can be transferred to a wallet",
    "determine": "Confirm",
    "cancel": "Cancel",
    "refund": "Stake refund",
    "determine_refund": "Confirm refund",
    "refundHint": "Once the stake is refunded successfully, the available balance in the staking /n account can be transferred to a wallet",
    "refundError": "Stakes will be refunded 600 blocks after submitting the withdrawal request",
    "validator_revenue": "Verification Rewards",
    "minner_revenue": "Mining Rewards",
    "gas": "gas fee",
    "history_revenue": "Reward history",
    "mortgage": "stake"
  },
  "tip": {
    "tittle": "Safety Tips",
    "tip1": "matrix.io does not hold your keys for you.We cannot access accounts, recover keys, reset passwords, nor reverse transactions.",
    "tip2": "Protect your keys and always ensure that you are on the intended URL.",
    "tip3": "You are responsible for your security."
  },
  "medical": {
    "tittle1": "The AI-assisted diagnosis system will provide diagnosis analysis for CT scans of lungs,",
    "tittle2": "The system was trained on results by labeled by experts from several top hospitals",
    "example": "Sample image",
    "start_experience": "Start",
    "future": "Lung CT scans, as well as many other services, will be supported in the future.",
    "pose1": "Pose detection is an important branch of computer vision, with valuable applications in detecting actions",
    "pose2": "human-machine interactions, gaming, animation and more.",
    "pose3": "Try it out and stay tuned for more new features in the future!",
    "obj": "Object detection can quickly and accurately generate automatic text labeling for objects in a photograph. "
  },
  "miningTransactionOverview": {
    "total_revenue": "Total mining rewards",
    "mining_hint": "Total mining rewards include block-generation rewards and gas fees",
    "remove_mortgage": "Unstake",
    "remove_tittle": "Once stake is removed successfully, the available balance in the staking \n account can be transferred to a wallet",
    "determine": "Confirm",
    "cancel": "Cancel",
    "refund": "Stake refund",
    "determine_refund": "Confirm refund",
    "refundHint": "Once the stake is refunded successfully, the available balance in the staking /n account can be transferred to a wallet",
    "refundError": "Stake will be refunded 600 blocks after submitting the withdrawal request",
    "validator_revenue": "Verification Rewards",
    "minner_revenue": "Mining Rewards",
    "gas": "gas fee",
    "history_revenue": "Reward history",
    "query_history_revenue": "View reward history",
    "query_history_mortgage": "View staking history",
    "remove_tittle": "Total staked assets and available portion of staked assets",
    "campaign_node": "eligible nodes",
    "getRevenue": "To receive rewards, you must first ",
    "nodeHint": "You have already withdraw from stakes, and will not compete for masternode from next cycle",
    "mortgage": "Stake"
  },
  "mortgageHistory": {
    "mortgageHistory": "Stake history",
    "mortgageTime": "Stake time",
    "mortgageValue": "Stake amount",
    "mortgageWallet": "Account",
    "cancelMortgageTime": "Withdraw time",
    "state": "status",
    "unknown": "Unknown",
    "mortgageSuccess": "Stake Success",
    "cancelMortgageSuccess": "Withdraw Success",
    "alreadyWithdrawal": "Withdrawn",
    "alreadyRefund": "Refunded"
  },
  "nodeCampaignRecord": {
    "tittle": "Node selection records",
    "blockHeight": "block height",
    "isNode": "Is is a node (Selected nodes can mine)",
    "cycle_revenue": "Cycle rewards (MAN)"
  },
  "offline": {
    "upload": "Please select the file to upload",
    "clickUpload": "Upload",
    "getInformation": "Get wallet information：",
    "inputAddress": "Input the transfer account wallet address",
    "manAssets": "MAN assets",
    "get": "get",
    "next": "next",
    "hint": "In order to ensure the security of your account, please close any open wallets before using offline transfer functions",
    "addressError": "*Please enter valid wallet address",
    "transfer_accounts_value": "transfer value",
    "transactionType": "Transaction type",
    "transactionTime": "Transaction time",
    "paymentAddress": "Payment address",
    "gatheringAddress": "Receiving address",
    "determineTransfer": "Confirm transfer",
    "success": "Success",
    "offlineTransferComplete": "Offline transfer complete",
    "timeTransaction": "Scheduled",
    "nowTransaction": "Immediate",
    "getWallet": "Get wallet (online)",
    "offTransfer": "Transfer (offline)",
    "unlockWallet": "Unlock wallet (offline)",
    "confirmTransfer": "Confirm transaction (online)",
    "offLineTransfer": "Offline transfer",
    "offLineTransferHint": "Offline transafers allow you to be offline when you unlock your wallet (by uploading a private key or keystore). This way, security is improved as your private key or keystore is not exposed to the network."
  },
  "privateKey": {
    "copy": "copy",
    "custody": "I’ve recorded my private key",
    "KeyCopy": "Copy private key",
    "keyHint": "A private key is a randomly generated string of 256 characters"
  },
  "record": {
    "transaction": "Transaction",
    "all": "All",
    "into": "Transfer in",
    "out": "Transfer out",
    "timeTransaction": "Scheduled",
    "nowTransaction": "Immediate",
    "index": "Index",
    "time": "Time",
    "transactionValue": "Value",
    "transactionDetails": "Details",
    "transactionType": "Type",
    "transactionState": "Status",
    "operation": "Operation",
    "undo": "Undo",
    "browser_detailed": "View more details in the blockchain browser",
    "mortgageSuccess": "Stake successful",
    "undoSuccess": "Successfully undone"
  },
  "token": {
    "tittle": "Add Token",
    "hint": "After adding a Token，you can view it on this computer. If you use another computer, you will need to add the Token again",
    "tokenContract": "TokenContract address",
    "symbol": "Token Symbol",
    "save": "Save",
    "tokenSuccess": "Added successfully",
    "tokenFail": "Add failed",
    "decimal": "Decimal"
  },
  "nftoken": {
    "tittle": "Add NFT",
    "hint": "After adding a NFT，you can view it on this computer. If you use another computer, you will need to add the Token again",
    "tokenContract": "NFT Contract address",
    "symbol": "NFT Symbol",
    "save": "Save",
    "tokenSuccess": "Added successfully",
    "tokenFail": "Add failed",
    "decimal": "Decimal"
  },
  "dialog": {
    "know": "I know",
    "youCan": "You can",
    "record": "Transaction record",
    "browser": "Blockchain browser",
    "or": "or",
    "queryDetails": "View transaction progress and details"
  },
  "ai": {
    "medical": "Lung cancer diagnosis",
    "posture": "pose detection",
    "object": "object detection",
    "aiRecord": "AI  application history",
    "medicalFileType": "Upload format: please upload CT scans as a compressed DCM file",
    "sendTips": "Please input the email address to receive the diagnosis results:",
    "sendTime": "The Diagnosis Results will be sent to your email address in about 15 minutes",
    "serviceValue": "This AI task will use",
    "emailAddress": "Email Address",
    "aiSuccess": "Successfully Uploaded"
  },
  "contract": {
    "coinType": "Currency",
    "signTransaction": "Sign transaction"
  },
  "greenMining": {
    "mining_revenue": "Returns & Stakes",
    "campaign_node": "Stake",
    "secondKey": "Secondary key",
    "beNodeget": "What returns are nodes eligible for",
    "howBeNode": "How to become a member node?",
    "other_question": "If you have further questions, please read our ",
    "FAQ": "FAQ",
    "greenTips": "Coming soon...... Green mining will start on April 13th, 2019!"
  },
  "crossChain": {
    "start":"Confirm",
    "CrossChain": "Wormhole",
    "Amount": "Amount(*A least 11 MAN for transaction)",
    "From": "From",
    "To": "To",
    "availableBalance":"Available Assets：",
    "receiveAddress": "Receiving wallet address",
    "receiveTips": "You will receive",
    "declare":"Tips：",
    "declare1": "*The receiving wallet of your cross-chain transfer can be unlocked using the same private key or keystore as your Matrix mainnet wallet.",
    "declare2": "* A 1% gas fee is charged for every transfer worth over 1000 MAN. For a transfer under 1000 MAN, a fixed amount of 10 MAN is charged.",
    "declare3": "* It normally takes about five minutes to receive a transfer. When a transaction overload happens, your transfer may take longer to arrive. If you fail to receive the transfer after 15 minutes, send an email detailing the transferred amount and receiving wallet address to wormhole@matrix.io for support."
  },
  "openWallet": {
    "back": "Back"
  },
  "queryWallet": {
    "tittle": "View wallet",
    "inputAddress": "Enter wallet address to view",
    "pleaseInput": "Enter wallet address",
    "addressError": "*The wallet address you entered is incorrect",
    "havingWallet1": "Already have a wallet?",
    "havingWallet2": "open my wallet",
    "notHaving1": "Don't have a wallet yet?",
    "notHaving2": "create my wallet"
  },
  "setGreeting": {
    "tittle": "Set a greeting or title",
    "hint": "Helps you identify your wallets from one another (Example: Steve Deng's MAN Mining Wallet)",
    "error": "Wallet name can't be blank",
    "skip": "Skip",
    "save": "Save",
    "setSuccess": "Done",
    "pleaseInput": "Please enter your preferred greetings!",
    "setWalletError": "You can only set greetings to the wallet"
  },
  "transactionnType": {
    "commonTransaction": "Common Transaction",
    "radioTransaction": "Broadcast Transaction",
    "minnerTransaction": "minner Transaction",
    "revocableTransaction": "Revocable Transaction",
    "undoneTransaction": "Cancelled Transaction",
    "authorizedEntrusts": "Authorized Entrusts",
    "cancelEntrusts": "Cancelled Entrusts",
    "timeTransaction": "Scheduled Transaction",
    "aiTransaction": "AI Transaction",
    "createCurrency": "Currency Creation Transaction",
    "validator": "Rewards to Validators",
    "interest": "Interests",
    "transactionFee": "Gas Fee Rewards",
    "lottery": "Lottery Rewards",
    "super": "Super Transaction",
    "superblock": "SuperBlock Transaction"
  },
  "blackList": {
    "add": "Add",
    "del": "delete",
    "tittle": "Blacklist",
    "list": "Blacklist"
  },
  "unlock": {
    "unlockSuccess": "Unlock Success",
    "online": "Online Mode",
    "offline": "Offline Mode",
    "sendSign": "Send signed transaction",
    "sendSignInformation": "Send signed information",
    "sign": "Sign",
    "sendSignature": "Send signature",
    "unlockTips": "Opening the wallet should in the status of connected network. It should be noted that in the offline mode, you only need to disconnect your network when carrying out signed transaction."
  },
  "undo": {
    "title": "Cancel Transaction",
    "transferHash": "transaction hash"
  },
  "OfflineUnlock": {
    "title": "Send signed transaction",
    "tip": "Click to send signed transaction",
    "sendSuccess": "Success",
    "offlineTip": "*Please ensure your device is offline when you sign the transaction",
    "sendSignTip": "*Please ensure your device is networked when you send the signed transaction",
    "sign": "Sign",
    "noSignTransfer": "unsigned transaction",
    "signing": "Sign Transaction",
    "selectSign": "Sign the transaction via one of  the following methods"
  },
  "refund": {
    "deposit_amount": "Stake amount",
    "deposit_status": "Stake status",
    "node_address": "Address",
    "no_deposit": "No Stake Info Found",
    "Set_Miner": "Set to Miner node",
    "Set_validator": "Set to validator node",
    "withdraw_block": "withdraw at block ",
    "block": " block"
  },
  "digAccount": {
    "role": "Stake Type",
    "miner": "Miner",
    "validator": "Validator",
    "signaddress": "Stake Address",
    "deposit_account": "Stake Account",
    "current": "Flexible",
    "regular": "Fixed",
    "withdraw_detail": "Details",
    "withdraw_deposit": "Unstake",
    "deposit": "stake",
    "refund_account": "Refund Account",
    "withdrawals_detail": "Details",
    "withdrawals": "Refund",
    "change_regular": "Transfer to fixed stake",
    "tips1": "1、At least 2000 MAN must be added each time for the fixed stake",
    "tips2": "2、At least 100 MAN must be added each time for the flexible stake",
    "tips3": "3、At least 100,000 MAN (combined fixed stake + flexible stake) are required to stake a Verification Masternode",
    "tips4": "4、When the amount of  \"fixed + flexible\" stake is more than 10 million MAN, rewards are only calculated at 10 million.",
    "tips5": "5、At least 100,00 MAN (combined fixed stake + flexible stake) are required to stake a Miner Masternode"
  },
  "regularDetail": {
    "regular_account": "Fixed Stake Account:",
    "begin_time": "Start time of stake",
    "deposit_time": "Time of Stake",
    "month": "Month",
    "deposit_value": "The amount of stake",
    "interest": "Stake rewards",
    "operation": "Operation",
    "success": "Unstake successfully",
    "regularDetailMsg": "After unstaking successfully, you can withdrawal your staked assets to your available assets 2 hours after the regular maturity.",
    "expected": "Expected at"
  },
  "currentWithdraw": {
    "current_account": "Flexible Stake Account:",
    "current_refund": "Unstake",
    "refund_value": "The amount of flexible unstake",
    "success": "Flexible unstake success",
    "confirmWithdrawMsg": "After unstaking successfully, you can withdrawal your staked assets to your available assets after 7 days"
  },
  "regularMortgage": {
    "change_regular": "Transfer to fixed stake",
    "current_value": "The amount of fixed stake",
    "success": "Transfer to fixed stake successfully"
  },
  "regularWithdrawals": {
    "regularWithdrawals": "Fixed Withdrawals",
    "withdraw_time": "The time of withdrawals",
    "value": "Amount",
    "state": "State",
    "can_withdrawals": "Available for withdrawals",
    "withdrawing": "Unstaking",
    "current_withdrawals": "Flexible Withdrawals",
    "success": "Withdrawals success"
  },
  "currentRefund": {
    "tips": "All withdrawalable flexible stake will be refunded to the account balance after withdrawal confirmation"
  },
  "jointFirst": {
    "jointMining":"Joint Mining",
    "createJoint":"Create joint mining",
    "all":"All joint mining",
    "my":"My joint mining",
    "jointAccount":"Joint Account",
    "createAddress":"Creator Account",
    "jointNumber":"Joint Number",
    "jointTotal":"Total Stake",
    "closeMining":"Close Mining",
    "mining":"In Mining",
    "join":"Participate in joint mining",
    "nojoin":"Not creating or participating in joint mining",
    "ratehit":"R0 is the creator rewards distribution weight, while R1 is less than 10,000, R2 is between 10,000 and 100,000, and R3 is more than 100,000 participants rewards distribution weight."
  },
  "jointDetail":{
    "signAddress":"Mining Account",
    "stakeTotal":"Total stake amount",
    "rewardTotal":"Total rewards amount ",
    "income_distribution":"Rewards Distribution Weight",
    "addMining":"Join Mining",
    "closeMining":"Close Mining",
    "updateSign":"Modify mining address",
    "account":"Account",
    "awardTotal":"Accumulated Rewards",
    "dissolveJoint":"You will dissolve this joint mining",
    "success":"Transaction sent successfully"
  },
  "participantsDetail":{
    "getAward":"Rewards Withdrawals",
    "type":"Type",
    "staking":"In Staking",
    "alreadyWithraw":"Already unstaked",
    "waitWithrawal":"To be refunded",
    "notYetDue":"Unexpired"
  },
  "joinCurrent":{
    "currentLeast":"At least 100 MAN tokens of the amount of flexible stake",
    "regularValue":"Fixed stake amount"
  },
  "jointAdd":{
    "jointAdd":"Participate in joint mining",
    "valueToMore":"Excessive amount",
    "updateSign":"Modify mining"
  },
  "createJoin":{
    "createJoin":"Create joint mining",
    "valueTips":"At least 100,000 MAN tokens of the amount of stake",
    "signAddressTips":"Mining address can be modified later",
    "income_distribution_weight":"Creator Rewards Distribution Weight",
    "join_income":"Participant Rewards Distribution Weight",
    "join_income_tips1":"Participants stake less than 10,000 MAN tokens",
    "join_income_tips2":"Participants stake less than 100,000 MAN tokens",
    "join_income_tips3":"Participants stake more than or equal to 100,000 MAN tokens",
    "tips":"Tips",
    "bottomTips1":"Rewards distribution weight：A positive integer of 1-10000.",
    "bottomTips2":"Rewards calculation method",
    "bottomTips3":"Creator's stake amount is A0, Weight R0",
    "bottomTips4":"The total stake amount less than 10,000 is DA1 and the weight is DR1.",
    "bottomTips5":"The total stake amount greater than or equal to 10,000 and less than 100,000 is DA2 and the weight is DR2.",
    "bottomTips6":"The total stake amount greater than or equal to 100,000 is DA3 and the weight is DR3.",
    "bottomTips7":"Total reward is W0",
    "bottomTips8":"Total weight：weight= A0*R0+DA1*DR1+DA2*DR2+DA3*DR3",
    "bottomTips9":"Stake is A, Weight is B, Reward is W",
    "bottomTips10":"W=W0*A*R/weight",
    "creatNew":"Create new joint mining",
    "valueError":"Please fill in the amount greater than 100,000",
    "valueToMore":"Excessive amount",
    "join_income_error":"Please enter the participant's rewards distribution weight",
    "createIncomeError":"Please enter the creator's rewards distribution weight",
    "nodeRate_error":"Please enter your management fees",
    "nodeRate_input_error":"Management fee can only be input between 1 and 100",
    "management_fees":"Management fees",
    "management_fees_placeholder":"Management fee (unit %, input only 0-100)"
  }
}